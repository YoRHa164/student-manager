<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.njupt.springmvc.settings.student.dao.StudentScoreDao">
	<resultMap type="StudentScoreBean" id="studentScoreBean">
		<id column="id" property="id"/>
		<result column="realName" property="name"/>
		<result column="python" property="python"/>
		<result column="linux" property="linux"/>
		<result column="sql" property="sql"/>
		<result column="java" property="java"/>
		<result column="total" property="total"/>
	</resultMap>
	
	<parameterMap type="StudentScoreBean" id="paramStudentScoreBean" >
		<parameter property="id" resultMap="studentScoreBean"/>
		<parameter property="name" resultMap="studentScoreBean"/>
		<parameter property="python" resultMap="studentScoreBean"/>
		<parameter property="linux" resultMap="studentScoreBean"/>
		<parameter property="sql" resultMap="studentScoreBean"/>
		<parameter property="java" resultMap="studentScoreBean"/>
	</parameterMap>
	
	
	<sql id="studentScoreBeanCompleteFields">
		id,
		realName,
		python,
		linux,
		`sql`,
		java,
		(python + linux + `sql` + java) total
	</sql>
	
	<select id="queryStudentScoreWithLimitOrderById" resultMap="studentScoreBean">
		select
			<include refid="studentScoreBeanCompleteFields"></include>
		from
			stureginfo reginfo
		left join
			stuscore score
		on
			score.stuId=reginfo.id
		order by
			id asc
		limit 
			#{startIndex}, #{limit}
	</select>
	<select id="totalCountOfQueryStudentScoreWithLimitOrderById" resultType="int">
		select
			count(id)
		from 
			stureginfo reginfo
		left join
			stuscore score
		on
			score.stuId=reginfo.id
	</select>
	
	
	<select id="queryStudentScoreWithLimitByRealName" resultMap="studentScoreBean">
		select
			<include refid="studentScoreBeanCompleteFields"></include>
		from
			stureginfo reginfo
		left join
			stuscore score
		on
			score.stuId=reginfo.id
		where
			realName like '%' #{realName} '%'
		order by
			id asc
		limit 
			#{startIndex}, #{limit}
	</select>
	
	<select id="totalCountOfQueryStudentScoreWithLimitByRealName" resultType="int">
		select
			count(id)
		from
			stureginfo reginfo
		left join
			stuscore score
		on
			score.stuId=reginfo.id
		where
			realName like '%' #{realName} '%'
	</select>
	<select id="queryStudentScoreExistsById" resultType="int">
		select 
			count(stuId)
		from 
			stuscore
		where
			stuId=#{id}
	</select>
	
	<update id="updateStudentScoreByStudentScoreBean" parameterMap="paramStudentScoreBean">
		<!-- update
			stuscore
		set
			python=#{python},
			linux=#{linux},
			`sql`=#{sql},
			java=#{java}
		where
			stuId=#{id} -->
		<!-- 
			使用动态sql进行拼接字符串,达到检验空值目的
		 -->
		update
			stuscore
		<set>
			<if test="python != null">
				python=#{python},
			</if>
			<if test="linux != null">
				linux=#{linux},
			</if>
			<if test="sql != null">
				`sql`=#{sql},
			</if>
			<if test="java != null">
				java=#{java}
			</if>
		</set>
		where
			stuId=#{id}
	</update>
	
	<insert id="insertStudentScoreByStudentScoreBean" parameterMap="paramStudentScoreBean">
		insert into stuscore
		<trim prefix="(" suffix=")" suffixOverrides=",">
				stuId,
			<if test="python != null">
				python,
			</if>
			<if test="linux != null">
				linux,
			</if>
			<if test="sql != null">
				`sql`,
			</if>
			<if test="java != null">
				java
			</if>
		</trim>
		<trim prefix="values(" suffix=")" suffixOverrides=",">
				#{id},
			<if test="python != null">
				#{python},
			</if>
			<if test="linux != null">
				#{linux},
			</if>
			<if test="sql != null">
				#{sql},
			</if>
			<if test="java != null">
				#{java}
			</if>
		</trim>
	</insert>
</mapper>