<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.njupt.springmvc.settings.student.dao.StudentCountDao">
	<select id="queryRegisiteTimeByInterval" resultType="map">
		select 
			DATE_FORMAT(regTime,'%Y-%m-%d') regDate,
			count(id) regNum
		from 
			stureginfo 
		where 
			regTime >= #{startTime} and 
			regTime  <![CDATA[<]]>  #{endTime} 
		group by 
			regDate
		order by
			regDate asc
	</select>
	 <select id="queryScoreInDefaultIntervalBySubject" resultType="map">
	 	select
			count(case when `${subject}` >=90 and `${subject}` &lt;=100 then stuId end)  '>=90',
			count(case when `${subject}` >=80 and `${subject}` &lt;  90 then stuId end)  '>=80',
		    count(case when `${subject}` >=70 and `${subject}` &lt;  80 then stuId end)  '>=70',
		    count(case when `${subject}` >=60 and `${subject}` &lt;  70 then stuId end)  '>=60',
		    count(case when `${subject}` &lt; 60 then stuId end) '&lt;60'
		from 
			stuscore
	 </select>
	 <select id="queryTotalScoreInDefaultInterval" resultType="map">
		 select
			count(case when `total` >= 350 and `total` &lt;=400 then `total` end) '>=350',
		    count(case when `total` >= 300 and `total` &lt; 350 then `total` end) '>=300',
		    count(case when `total` >= 250 and `total` &lt; 300 then `total` end) '>=250',
		    count(case when `total` >= 200 and `total` &lt; 250 then `total` end) '>=200',
		    count(case when `total` >= 150 and `total` &lt; 200 then `total` end) '>=150',
		    count(case when `total` >= 100 and `total` &lt; 150 then `total` end) '>=100',
		    count(case when `total` >= 0   and `total` &lt; 100 then `total` end) '&lt;100'
		from(
			select
				sum(`python` + `linux` + `sql` + `java`) `total` 
			from
				stuscore
			group by stuId
			) totalscore;
	 </select>
	 
	 <select id="queryStudentScoreBySbujectOnScoreRange" parameterType="map" resultType="map">
	 	select 
			id, 
			realName,
			indentifyNo, 
			phone, 
			score
		from (
			select 
				stuId, 
				`${subject}` score
			from 
				 stuscore
			where 
				`${subject}` >=#{minScore} and 
				`${subject}` &lt;=#{maxScore} 
			order by 
				score desc
			) score
		left join
			stureginfo info
		on
			info.id = score.stuId
		order by 
			score desc
		limit
			#{startIndex},#{limit}
	 </select>
	 <select id="totalCountOfQueryStudentScoreBySbujectOnScoreRange" parameterType="map" resultType="int">
		select 
			stuId
		from 
			 stuscore
		where 
			`${subject}` >=#{minScore} and 
			`${subject}` &lt;=#{maxScore} 
	 </select>
	 
	 <select id="queryStudentTotalScoreOnScoreRange" resultType="map" parameterType="map">
	 	select 
			id, 
			realName, 
			indentifyNo, 
			phone, 
			score sum
		from (
			select 
				stuId, 
		        (`java` + `sql` + `linux` + `python`) score 
		    from 
				stuscore
			where
				(`java` + `sql` + `linux` + `python`) >= #{minScore}
			and
				(`java` + `sql` + `linux` + `python`) &lt;=#{maxScore}
			) totalTable
		left join
			stureginfo info
		on
			totalTable.stuId=info.id
		order by 
			score desc
		limit
			#{startIndex}, #{limit};
	 </select>
	 <select id="totalCountOfQueryStudentTotalScoreOnScoreRange" resultType="int" parameterType="map">
		select 
			count(stuId) 
	    from 
			stuscore
		where
			(`java` + `sql` + `linux` + `python`) >= #{minScore}
		and
			(`java` + `sql` + `linux` + `python`) &lt;=#{maxScore}
	 </select>
</mapper>